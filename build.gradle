apply plugin: 'java'
apply plugin: 'application'

javadoc {
    options.tags = [ "author:" ]
}

repositories {
    jcenter()
    mavenCentral()
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots/"
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

group = 'com.wizzardo'
version = '0.5-SNAPSHOT'

mainClassName = "com.wizzardo.http.HttpServer"

ext {
    descriptionString = 'Java HTTP-server, based on epoll-lib'
}
apply from: 'gradle/sonatype.gradle'
apply plugin: 'jacoco'

task codeCoverageReport(type: JacocoReport) {
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    sourceSets sourceSets.main
    reports {
        xml.enabled true
        xml.destination //"${buildDir}/reports/jacoco/report.xml"
        html.enabled false
        csv.enabled false
    }
}

dependencies {
//    compile files('epoll-0.3.5-SNAPSHOT.jar')
    compile 'com.wizzardo.tools:tools:0.24-SNAPSHOT'
    compile 'com.wizzardo:epoll:0.3.5-SNAPSHOT'
//    compile 'com.wizzardo:epoll:0.3.5-SNAPSHOT:natives-x64'
//    compile 'com.wizzardo:epoll:0.3.5-SNAPSHOT:natives-x32'
//    compile 'com.wizzardo:epoll:0.3.5-SNAPSHOT:natives-aarch64'
    compile 'com.wizzardo:simple-websocket-client:0.2'

    testCompile 'junit:junit:4.12'
}

//create a single Jar with all dependencies
task fatJar(type: Jar) {
    manifest {
        attributes(
                "Main-Class": mainClassName
        )
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

test {
    testLogging {
        events "failed"
        exceptionFormat "full"
        showStandardStreams = true
    }
}
